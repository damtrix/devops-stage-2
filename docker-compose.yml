version: '3.7'

services:
  frontend:
    build: ./frontend
    container_name: react_frontend
    labels:
      - 'traefik.http.routers.frontend.rule=Host(`yourdomain.com`)'
      - 'traefik.http.services.frontend.loadbalancer.server.port=80'

  backend:
    build: ./backend
    container_name: fastapi_backend
    labels:
      - 'traefik.http.routers.backend.rule=Host(`yourdomain.com`) && (PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`))'
      - 'traefik.http.services.backend.loadbalancer.server.port=8000'

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: yourdbname
      POSTGRES_USER: yourdbuser
      POSTGRES_PASSWORD: yourdbpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data

  adminer:
    image: adminer
    container_name: adminer
    labels:
      - 'traefik.http.routers.adminer.rule=Host(`db.yourdomain.com`)'
    ports:
      - '8080:8080'

  traefik:
    image: traefik:v2.2
    container_name: traefik
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
    ports:
      - '80:80'
      - '8090:8090'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    labels:
      - 'traefik.http.routers.api.rule=Host(`proxy.yourdomain.com`)'
      - 'traefik.http.services.api.loadbalancer.server.port=8090'

volumes:
  postgres_data:
